-- MySQL Script generated by MySQL Workbench
-- Sun Sep 17 12:57:38 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`facility`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`facility` (
  `id` INT NOT NULL,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`role` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `id` INT NOT NULL,
  `password` VARCHAR(128) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `e-mail` VARCHAR(90) NOT NULL,
  `phone` VARCHAR(15) NOT NULL,
  `facility_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  `deleted` TINYINT(1) NOT NULL,
  `password_change_required` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `e-mail_UNIQUE` (`e-mail` ASC) VISIBLE,
  INDEX `fk_user_facility_idx` (`facility_id` ASC) VISIBLE,
  INDEX `fk_user_role1_idx` (`role_id` ASC) VISIBLE,
  UNIQUE INDEX `role_id_UNIQUE` (`role_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_facility`
    FOREIGN KEY (`facility_id`)
    REFERENCES `mydb`.`facility` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`classes_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`classes_type` (
  `id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`course` (
  `id` INT NOT NULL,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`classes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`classes` (
  `id` INT NOT NULL,
  `description` VARCHAR(150) NULL,
  `day` VARCHAR(10) NOT NULL,
  `start` TIME NOT NULL,
  `end` TIME NOT NULL,
  `classroom` VARCHAR(8) NOT NULL,
  `user_id` INT NOT NULL,
  `classes_type_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `start_day` DATE NOT NULL,
  `end_day` DATE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `day_UNIQUE` (`day` ASC) VISIBLE,
  INDEX `fk_classes_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_classes_classes_type1_idx` (`classes_type_id` ASC) VISIBLE,
  INDEX `fk_classes_course1_idx` (`course_id` ASC) VISIBLE,
  CONSTRAINT `fk_classes_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_classes_classes_type1`
    FOREIGN KEY (`classes_type_id`)
    REFERENCES `mydb`.`classes_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_classes_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `mydb`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`request` (
  `id` INT NOT NULL,
  `issue_date` DATETIME NOT NULL,
  `comment` VARCHAR(150) NULL,
  `classes_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_request_subject1_idx` (`classes_id` ASC) VISIBLE,
  INDEX `fk_request_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_request_subject1`
    FOREIGN KEY (`classes_id`)
    REFERENCES `mydb`.`classes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`replacement_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`replacement_status` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`replacement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`replacement` (
  `id` INT NOT NULL,
  `request_id` INT NOT NULL,
  `classes_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `replacement_status_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_replacement_request1_idx` (`request_id` ASC) VISIBLE,
  INDEX `fk_replacement_subject1_idx` (`classes_id` ASC) VISIBLE,
  INDEX `fk_replacement_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_replacement_replacement_status1_idx` (`replacement_status_id` ASC) VISIBLE,
  CONSTRAINT `fk_replacement_request1`
    FOREIGN KEY (`request_id`)
    REFERENCES `mydb`.`request` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_subject1`
    FOREIGN KEY (`classes_id`)
    REFERENCES `mydb`.`classes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_replacement_status1`
    FOREIGN KEY (`replacement_status_id`)
    REFERENCES `mydb`.`replacement_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`notification` (
  `id` INT NOT NULL,
  `post_date` DATETIME NOT NULL,
  `content` LONGTEXT NOT NULL,
  `user_id` INT NOT NULL,
  `request_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notification_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_notification_request1_idx` (`request_id` ASC) VISIBLE,
  CONSTRAINT `fk_notification_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_request1`
    FOREIGN KEY (`request_id`)
    REFERENCES `mydb`.`request` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
